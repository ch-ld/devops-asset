version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: devops-asset-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: devops_asset
      MYSQL_USER: devops
      MYSQL_PASSWORD: devops123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    command: 
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-authentication-plugin=mysql_native_password
    networks:
      - devops-asset-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: devops-asset-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass "izpXvn894uW2HFbyP5OGr"
    networks:
      - devops-asset-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Go后端服务
  server:
    build:
      context: ./server
      dockerfile: ../Dockerfile
    container_name: devops-asset-server
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - APP_MODE=prod
      - DATABASE_TYPE=mysql
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=devops
      - MYSQL_PASSWORD=devops123
      - MYSQL_DB=devops_asset
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=izpXvn894uW2HFbyP5OGr
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - devops-asset-network
    volumes:
      - ./server/log:/app/log
      - ./server/static:/app/static
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Vue前端服务（开发模式）
  web:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    container_name: devops-asset-web
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./web:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VITE_API_URL=http://localhost:8080
    networks:
      - devops-asset-network
    profiles:
      - development

  # Nginx反向代理（生产模式）
  nginx:
    image: nginx:alpine
    container_name: devops-asset-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl
      - ./web/dist:/usr/share/nginx/html
    depends_on:
      - server
    networks:
      - devops-asset-network
    profiles:
      - production

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  devops-asset-network:
    driver: bridge 